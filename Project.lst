Microsoft (R) Macro Assembler Version 14.28.29912.0	    04/15/21 12:52:21
Calendar.asm						     Page 1 - 1



				; © 2021 Nhan Nguyen Huu.  All rights reserved.
				; Display a calendar for a specific month 

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 1F 1C 1F 1E 1F		data1	DB	31,28,31,30,31,30,31,31,30,31,30,31			; Khoi tao mang bao gom cac ngay cua moi thang
	   1E 1F 1F 1E 1F
	   1E 1F

 0000000C 54 68 61 6E 67		str2	DB "Thang ", 0									; 4 xau ky tu dung de ho tro trong xuat ket qua
	   20 00
 00000013 4E 61 6D 20 00		str3	DB "Nam ", 0
 00000018 20 00				str4	DB " ", 0
 0000001A 54 32 20 54 33		day_of_week DB "T2 T3 T4 T5 T6 T7 CN", 0
	   20 54 34 20 54
	   35 20 54 36 20
	   54 37 20 43 4E
	   00

 0000002F 0001				ngay_1	DW	1											; ngay dau tien cua thang
 00000031 02				thang_1 DB	2											; <----------------Chinh sua thang o day 
 00000032 0000				a		DW ?
 00000034 0000				b		DW ?

 00000036 0000				d		DW ?
 00000038 0000				e		DW ?
 0000003A 0000				e2		DW ?
 0000003C 0000				e3		DW ?
 0000003E 0000				e4		DW ?
 00000040 00				e5		DB ?
 00000041 00				e6		DB ?
 00000042 07E5				nam_1	DW 2021											; <----------------Chinh sua nam o day
 00000044 0000				nam1	word ?
 00000046 0000 0000 0000		ketqua	WORD  ?, ?, ?									; Su dung trong xet nam nhuan

 0000004C 0D 0A 00			newLine BYTE 0DH, 0AH, 0

 00000000			.code
 00000000			namnhuan PROC												; Ham xet nam nhuan, neu la nam nhuan, bl = 1 va nguoc lai
 00000000  66| 89 1D			mov nam1, bx
	   00000044 R
 00000007  33 C0			xor eax, eax											; xoa eax
 00000009  66| A1			mov ax, nam1											; chuyen bien vao thanh ghi ax de su dung phep chia
	   00000044 R
 0000000F  66| BB 0190			mov bx, 400												; so bi chia la 400
 00000013  66| 33 D2			xor dx, dx												; xoa dx ( vi phep chia bx su dung dx:ax)
 00000016  66| F7 F3			div bx									
 00000019  66| 83 FA 00			cmp dx, 0												; dx = ax % bx, so sanh dx voi 0, neu chia het ketqua[0] =1 
 0000001D  74 06			je continue1											; neu khong chia het ketqua[0] = 0
 0000001F  66| BA 0000			mov dx, 0
 00000023  EB 04			jmp continue1_1
 00000025				continue1:												; Tuong duong: if dx == 0: ketqua[0] = 1 else ketqua[0] = 0
 00000025  66| BA 0001			mov dx, 1
 00000029				continue1_1:
 00000029  66| 89 15			mov ketqua[0], dx									
	   00000046 R
					; -------------------------------------------------------------------------------------------------------
 00000030  66| A1			mov ax, nam1										
	   00000044 R
 00000036  66| BB 0064			mov bx, 100												; if nam1 % 100 == 0: ketqua[1]= 0 else ketqua[1] = 1
 0000003A  66| 33 D2			xor dx, dx
 0000003D  66| F7 F3			div bx
 00000040  66| 83 FA 00			cmp dx, 0
 00000044  74 06			je continue2
 00000046  66| BA 0001			mov dx, 1
 0000004A  EB 04			jmp continue2_1
 0000004C				continue2:
 0000004C  66| BA 0000			mov dx, 0
 00000050				continue2_1:
 00000050  66| 89 15			mov ketqua[1], dx
	   00000047 R
					;---------------------------------------------------------------------------------------------------------
 00000057  66| A1			mov ax, nam1											; if nam1 % 4 == 0: ketqua[2] = 1 else ketqua[2] = 0
	   00000044 R
 0000005D  66| BB 0004			mov bx, 4
 00000061  66| 33 D2			xor dx, dx
 00000064  66| F7 F3			div bx
 00000067  66| 83 FA 00			cmp dx, 0
 0000006B  74 06			je continue3
 0000006D  66| BA 0000			mov dx, 0
 00000071  EB 04			jmp continue3_1
 00000073				continue3:
 00000073  66| BA 0001			mov dx, 1
 00000077				continue3_1:
 00000077  66| 89 15			mov ketqua[2], dx
	   00000048 R
					;----------------------------------------------------------------------------------------------------------
 0000007E  8A 3D 00000046 R		mov bh, byte ptr ketqua[0]								; luu lai cac ketqua vao cac thanh ghi
 00000084  8A 1D 00000047 R		mov bl, byte ptr ketqua[1]
 0000008A  8A 15 00000048 R		mov dl, byte ptr ketqua[2]

 00000090  22 DA			and bl, dl											
 00000092  0A DF			or bl, bh												; bl = (bl and dl) or bh
				;	
 00000094  C3				ret
 00000095			namnhuan ENDP


 00000095			main PROC
				;---------------------------------------------------------------------------------------------
				; Tuong duong cau lenh trong C++:
				;
				;	int a= ((14 - month) / 12);
				;	int	jmd = (day + ((153 * (month + 12 * a - 3) + 2) / 5) +
				;     (365 * (year + 4800 - a) % 343) +
				;     ((year + 4800 - a) / 4) - 
				;    ((year + 4800 - a) / 100) + 
				;    ((year + 4800 - a) / 400)  - 6) % 7
				;---------------------------------------------------------------------------------------------
 00000095  33 C0			xor eax, eax
 00000097  66| B8 000E			mov ax, 14
 0000009B  2A 05 00000031 R		sub al, thang_1
 000000A1  B3 0C			mov bl, 12
 000000A3  F6 F3			div bl
 000000A5  B4 00			mov ah, 0
 000000A7  66| A3			mov a, ax												; a = ((14 - month) / 12)
	   00000032 R

 000000AD  B3 0C			mov bl,12
 000000AF  F6 E3			mul bl
 000000B1  02 05 00000031 R		add al, thang_1
 000000B7  2C 03			sub al, 3
 000000B9  B3 99			mov bl, 153
 000000BB  F6 E3			mul bl
 000000BD  04 02			add al, 2
 000000BF  B3 05			mov bl, 5
 000000C1  B7 00			mov bh, 0
 000000C3  66| 33 D2			xor dx,dx
 000000C6  66| F7 F3			div bx
 000000C9  66| A3			mov e4, ax												; e4 = ((153 * (month + 12 * a - 3) + 2) / 5)
	   0000003E R

 000000CF  66| B9 12C0			mov cx, 4800
 000000D3  66| 03 0D			add cx, nam_1
	   00000042 R
 000000DA  66| 2B 0D			sub cx, a
	   00000032 R
 000000E1  66| 89 0D			mov b, cx												; b = year + 4800 - a
	   00000034 R
					
 000000E8  66| BB 016D			mov bx, 365
 000000EC  66| A1			mov ax, b
	   00000034 R
 000000F2  66| F7 E3			mul bx
 000000F5  66| BB 0157			mov bx, 343
 000000F9  66| F7 F3			div bx
 000000FC  66| 89 15			mov d, dx												; d = (365 * b )% 343 ; trong cong thuc goc chi la 365 * b , % 343 them de tranh tran thanh ghi
	   00000036 R

 00000103  66| 33 D2			xor dx, dx
 00000106  66| A1			mov ax, b
	   00000034 R
 0000010C  B7 00			mov bh, 0
 0000010E  B3 04			mov bl, 4
 00000110  66| F7 F3			div bx													; e = b/4
 00000113  66| A3			mov e, ax
	   00000038 R

 00000119  66| 33 D2			xor dx, dx
 0000011C  66| A1			mov ax, b
	   00000034 R
 00000122  B7 00			mov bh, 0
 00000124  B3 64			mov bl, 100
 00000126  66| F7 F3			div bx													; e2 = b/100
 00000129  66| A3			mov e2, ax
	   0000003A R

 0000012F  66| 33 D2			xor dx, dx
 00000132  66| A1			mov ax, b
	   00000034 R
 00000138  66| BB 0190			mov bx, 400
 0000013C  66| F7 F3			div bx
 0000013F  66| A3			mov e3, ax												; e3 = b/400
	   0000003C R

 00000145  66| B8 0000			mov ax, 0
 00000149  66| A1			mov ax, d
	   00000036 R
 0000014F  66| 03 05			add ax, ngay_1
	   0000002F R
 00000156  66| 03 05			add ax, e4
	   0000003E R
 0000015D  66| 03 05			add ax, e
	   00000038 R
 00000164  66| 2B 05			sub ax, e2
	   0000003A R
 0000016B  66| 03 05			add ax, e3
	   0000003C R
 00000172  66| 83 E8 06			sub ax, 6
 00000176  66| BB 0007			mov bx, 7
 0000017A  66| 33 D2			xor dx, dx
 0000017D  66| F7 F3			div bx													; e5 =  (day + e4 + d + e - e2 + e3) % 7

 00000180  88 15 00000040 R		mov e5, dl
 00000186  66| 8B 1D			mov bx, nam_1
	   00000042 R
 0000018D  E8 FFFFFE6E			call namnhuan											; Goi ham nam nhuan
 00000192  66| 83 FA 01			cmp dx, 1												; neu la nam nhuan thi data1[1] = 29 ( thang 2 nam do co 29 ngay)
 00000196  75 07			jne continue_main
 00000198  C6 05 00000001 R		mov data1[1], 29
	   1D
 0000019F				continue_main:
				;-------------------------------------------------Hien thi lich thang do--------------------------------------------------
 0000019F  BA 00000013 R		mov edx, offset str3
 000001A4  E8 00000000 E		call writestring

 000001A9  66| A1			mov ax, nam_1
	   00000042 R
 000001AF  E8 00000000 E		call writeDec											; printf("Nam %d", nam_1 ); in ra nam

 000001B4  BA 0000004C R		mov edx, offset newline
 000001B9  E8 00000000 E		call writestring

 000001BE  BA 0000000C R		mov edx, offset str2
 000001C3  E8 00000000 E		call writestring
 000001C8  B4 00			mov ah, 0
 000001CA  A0 00000031 R		mov al, thang_1
 000001CF  E8 00000000 E		call writeDec											; printf("\nThang %d", thang_1); in ra thang

 000001D4  BA 0000004C R		mov edx, offset newline									;
 000001D9  E8 00000000 E		call writestring

 000001DE  BA 0000001A R		mov edx, offset day_of_week								; In ra ten cac ngay trong tuan
 000001E3  E8 00000000 E		call writestring

					
 000001E8  BA 0000004C R		mov edx, offset newline
 000001ED  E8 00000000 E		call writestring

 000001F2  33 D2			xor edx, edx
 000001F4  8A 15 00000031 R		mov dl, thang_1
 000001FA  FE CA			dec dl
 000001FC  8A 8A 00000000 R		mov cl, data1[edx]
 00000202  88 0D 00000041 R		mov e6, cl												; e6 = so ngay cua thang do
 00000208  B0 00			mov al, 0												; khoi tao lai al = 0, bl = 1
 0000020A  B3 01			mov bl, 1												; al : so thu tu cua vi tri in ra , bl : ngay trong thang
 0000020C				l1:														; Lap 1: in ra chuoi "   " ( 3 dau cach) cho den khi al == e5 ( ngay dau tien trong thang)
 0000020C  3A 05 00000040 R			cmp al, e5											; so sanh al voi e5, neu al == e5 ket thuc vong lap 1 nhay sang vong lap thu 2
 00000212  74 18				je ctn_1
 00000214  BA 00000018 R			mov edx, offset str4
 00000219  E8 00000000 E			call writestring
 0000021E  E8 00000000 E			call writestring
 00000223  E8 00000000 E			call writestring
 00000228  FE C0				inc al												; tang al len 1 
 0000022A  EB E0				jmp l1												; tro lai l1
						
							
 0000022C				ctn_1:													; vong lap 2: in ra tat ca cac ngay con lai
 0000022C  3A 1D 00000041 R			cmp bl, e6											; so sanh bl voi e6 ( e6 la so ngay cua thang)
 00000232  77 54				ja end_1											; neu bl > e6 ket thuc chuong trinh
 00000234  80 FB 0A				cmp bl, 10											; neu bl < 10: in them ky tu '0' vao dau moi ngay
 00000237  73 15				jae ctn_3											; neu bl >= 10: bo qua buoc nay
 00000239  B7 00					mov bh, 0
 0000023B  B4 00					mov ah, 0
 0000023D  A2 00000040 R				mov e5, al
 00000242  B0 00					mov al, 0
 00000244  E8 00000000 E				call writedec
 00000249  A0 00000040 R				mov al, e5
 0000024E					ctn_3:												
 0000024E  8A F8				mov bh, al
 00000250  B4 00				mov ah, 0											; lam sach thanh ghi ah
 00000252  8A C3				mov al, bl											; in ra ngay tren thanh ghi ax
 00000254  E8 00000000 E			call writedec
 00000259  BA 00000018 R			mov edx, offset str4	
 0000025E  E8 00000000 E			call writestring
 00000263  8A C7				mov al, bh											
 00000265  8A CB				mov cl, bl
 00000267  8A E8				mov ch, al											; luu gia tri cua bl va al hien thoi vao thanh ghi cl va ch
 00000269  B3 07				mov bl, 7											; bl = 7 - so chia bang 7
 0000026B  B4 00				mov ah, 0											; lam sach thanh ghi ah
 0000026D  F6 F3				div bl												; ax / bl: thuong luu vao thanh ghi al, so du luu vao thanh ghi ah
 0000026F  80 FC 06				cmp ah, 6											; neu ah = 6: in ky tu xuong dong
 00000272  75 0A				jne ctn_2											; neu ah != 6: bo qua buoc nay
 00000274  BA 0000004C R				mov edx, offset newline
 00000279  E8 00000000 E				call writestring
 0000027E					ctn_2:
 0000027E  8A C5				mov al, ch											; tra lai gia tri cho thanh ghi al va bl
 00000280  8A D9				mov bl, cl
 00000282  FE C0				inc al												; tang al va bl them 1 don vi
 00000284  FE C3				inc bl
 00000286  EB A4				jmp ctn_1											; den vong lap tiep
 00000288				end_1:													; ket thuc
					exit
 00000288  6A 00	   *	    push   +000000000h
 0000028A  E8 00000000 E   *	    call   ExitProcess
 0000028F			main ENDP
				END main
Microsoft (R) Macro Assembler Version 14.28.29912.0	    04/15/21 12:52:21
Calendar.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000004F Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000028F Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000095 _TEXT	Length= 000001FA Public STDCALL
  continue_main  . . . . . . . .	L Near	 0000019F _TEXT	
  l1 . . . . . . . . . . . . . .	L Near	 0000020C _TEXT	
  ctn_1  . . . . . . . . . . . .	L Near	 0000022C _TEXT	
  ctn_3  . . . . . . . . . . . .	L Near	 0000024E _TEXT	
  ctn_2  . . . . . . . . . . . .	L Near	 0000027E _TEXT	
  end_1  . . . . . . . . . . . .	L Near	 00000288 _TEXT	
namnhuan . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000095 Public STDCALL
  continue1  . . . . . . . . . .	L Near	 00000025 _TEXT	
  continue1_1  . . . . . . . . .	L Near	 00000029 _TEXT	
  continue2  . . . . . . . . . .	L Near	 0000004C _TEXT	
  continue2_1  . . . . . . . . .	L Near	 00000050 _TEXT	
  continue3  . . . . . . . . . .	L Near	 00000073 _TEXT	
  continue3_1  . . . . . . . . .	L Near	 00000077 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
a  . . . . . . . . . . . . . . .	Word	 00000032 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
b  . . . . . . . . . . . . . . .	Word	 00000034 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
data1  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
day_of_week  . . . . . . . . . .	Byte	 0000001A _DATA	
d  . . . . . . . . . . . . . . .	Word	 00000036 _DATA	
e2 . . . . . . . . . . . . . . .	Word	 0000003A _DATA	
e3 . . . . . . . . . . . . . . .	Word	 0000003C _DATA	
e4 . . . . . . . . . . . . . . .	Word	 0000003E _DATA	
e5 . . . . . . . . . . . . . . .	Byte	 00000040 _DATA	
e6 . . . . . . . . . . . . . . .	Byte	 00000041 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
e  . . . . . . . . . . . . . . .	Word	 00000038 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
ketqua . . . . . . . . . . . . .	Word	 00000046 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
nam1 . . . . . . . . . . . . . .	Word	 00000044 _DATA	
nam_1  . . . . . . . . . . . . .	Word	 00000042 _DATA	
newLine  . . . . . . . . . . . .	Byte	 0000004C _DATA	
ngay_1 . . . . . . . . . . . . .	Word	 0000002F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
str2 . . . . . . . . . . . . . .	Byte	 0000000C _DATA	
str3 . . . . . . . . . . . . . .	Byte	 00000013 _DATA	
str4 . . . . . . . . . . . . . .	Byte	 00000018 _DATA	
thang_1  . . . . . . . . . . . .	Byte	 00000031 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
